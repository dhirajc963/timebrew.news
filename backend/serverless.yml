service: timebrew-backend

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  httpApi:
    cors:
      allowedOrigins:
        - '*'
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Requested-With
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      maxAge: 86400
  environment:
    USER_POOL_ID: ${env:USER_POOL_ID}
    CLIENT_ID: ${env:CLIENT_ID}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    SMTP_SERVER: ${env:SMTP_SERVER}
    SMTP_PORT: ${env:SMTP_PORT}
    SMTP_USERNAME: ${env:SMTP_USERNAME}
    SMTP_PASSWORD: ${env:SMTP_PASSWORD}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:*
          Resource: "*"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    pythonBin: python3

functions:
  # Health check function
  health:
    handler: handlers/utils/health.handler
    events:
      - http:
          path: health
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  # Auth functions
  register:
    handler: handlers/auth/register.handler
    events:
      - http:
          path: auth/register
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  login:
    handler: handlers/auth/login.handler
    events:
      - http:
          path: auth/login
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  # ADD THESE TWO:
  verifyOTP:
    handler: handlers/auth/verify_otp.handler
    events:
      - http:
          path: auth/verify-otp
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  resendVerification:
    handler: handlers/auth/resend_verification.handler
    events:
      - http:
          path: auth/resend-verification
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  # Placeholder brew functions
  getBrews:
    handler: handlers/brews/get.handler
    events:
      - http:
          path: brews
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With

  createBrew:
    handler: handlers/brews/create.handler
    events:
      - http:
          path: brews
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With
